// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  farcasterId   String   @unique
  displayName   String?
  profilePicture String?
  activeHabits  String   // JSON string of habit IDs array
  achievedBadges String  // JSON string of badge IDs array
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  habits       Habit[]

  @@map("users")
}

model Habit {
  id            String   @id @default(cuid())
  userId        String
  name          String
  description   String
  goal          String
  startDate     DateTime
  isActive      Boolean  @default(true)
  streakMetadata Json // { currentStreak: number, longestStreak: number, lastLoggedDate?: string }
  category      String   // 'health' | 'productivity' | 'learning' | 'social' | 'creative'
  icon          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  streakLogs    StreakLog[]

  @@map("habits")
}

model StreakLog {
  id            String   @id @default(cuid())
  habitId       String
  logDate       DateTime
  isAdherent    Boolean
  notes         String?
  streakLengthAtLog Int
  createdAt     DateTime @default(now())

  habit         Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)

  @@unique([habitId, logDate])
  @@map("streak_logs")
}

model Badge {
  id            String   @id @default(cuid())
  name          String
  description   String
  iconUrl       String
  unlockCriteria Json // { type: 'streak' | 'consistency' | 'milestone', value: number, category?: string }
  rarity        String   // 'common' | 'rare' | 'epic' | 'legendary'
  createdAt     DateTime @default(now())

  @@map("badges")
}
